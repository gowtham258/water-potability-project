{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a261531a-4efc-4223-8b4c-83af572e106d",
   "metadata": {},
   "outputs": [],
   "source": [
    "import streamlit as st\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from scipy.stats import ttest_ind\n",
    "from sklearn.impute import SimpleImputer\n",
    "streamlit run app.py\n",
    "\n",
    "st.set_page_config(layout=\"wide\", page_title=\"Water Potability EDA\")\n",
    "st.title(\"ðŸ’§ Water Potability Exploratory Analysis\")\n",
    "\n",
    "# Sidebar: upload or load default\n",
    "uploaded_file = st.sidebar.file_uploader(\"Upload water_potability.csv\", type=\"csv\")\n",
    "if uploaded_file:\n",
    "    df = pd.read_csv(uploaded_file)\n",
    "else:\n",
    "    st.sidebar.write(\"Using default dataset\")\n",
    "    df = pd.read_csv(\"water_potability.csv\")\n",
    "\n",
    "# Impute missing values\n",
    "features = [\n",
    "    'ph', 'Hardness', 'Solids', 'Chloramines',\n",
    "    'Sulfate', 'Conductivity', 'Organic_carbon',\n",
    "    'Trihalomethanes', 'Turbidity'\n",
    "]\n",
    "imputer = SimpleImputer(strategy='median')\n",
    "df[features] = imputer.fit_transform(df[features])\n",
    "\n",
    "# 1. Overall Distributions\n",
    "st.header(\"1. Feature Distributions\")\n",
    "fig, axes = plt.subplots(3, 3, figsize=(15, 12))\n",
    "axes = axes.flatten()\n",
    "sns.set(style=\"whitegrid\")\n",
    "for ax, col in zip(axes, features):\n",
    "    sns.histplot(df[col], kde=True, bins=30, ax=ax)\n",
    "    ax.set_title(col)\n",
    "    ax.set_ylabel(\"Count\")\n",
    "    ax.set_xlabel(\"\")\n",
    "plt.tight_layout()\n",
    "st.pyplot(fig)\n",
    "\n",
    "# 2. Correlation with Potability\n",
    "st.header(\"2. Feature Correlation with Potability\")\n",
    "corrs = df.corr()['Potability'].drop('Potability').sort_values(ascending=False)\n",
    "fig, ax = plt.subplots(figsize=(8,4))\n",
    "sns.barplot(x=corrs.index, y=corrs.values, palette='viridis', ax=ax)\n",
    "ax.set_xticklabels(ax.get_xticklabels(), rotation=45, ha='right')\n",
    "ax.set_ylabel(\"Pearson r\")\n",
    "ax.set_title(\"Correlation with Potability\")\n",
    "st.pyplot(fig)\n",
    "\n",
    "# 3. Overlayed Histograms by Potability\n",
    "st.header(\"3. Distribution by Potability\")\n",
    "selected = st.selectbox(\"Choose feature:\", features)\n",
    "fig, ax = plt.subplots(figsize=(6,4))\n",
    "sns.histplot(df[df.Potability==1][selected], label='Potable', kde=True, stat='count', alpha=0.6, ax=ax)\n",
    "sns.histplot(df[df.Potability==0][selected], label='Non-Potable', kde=True, stat='count', alpha=0.6, ax=ax)\n",
    "ax.set_title(f\"{selected} by Potability\")\n",
    "ax.legend()\n",
    "st.pyplot(fig)\n",
    "\n",
    "# 4. Correlation Heatmap\n",
    "st.header(\"4. Correlation Heatmap\")\n",
    "fig, ax = plt.subplots(figsize=(10,8))\n",
    "sns.heatmap(df.corr(), annot=True, fmt=\".2f\", cmap='coolwarm', linewidths=0.5, ax=ax)\n",
    "ax.set_title(\"Feature Correlation Matrix\")\n",
    "st.pyplot(fig)\n",
    "\n",
    "# 5. Hypothesis Testing (t-test)\n",
    "st.header(\"5. Hypothesis Testing (t-test)\")\n",
    "results = []\n",
    "for feat in features:\n",
    "    grp1 = df.loc[df.Potability==1, feat]\n",
    "    grp0 = df.loc[df.Potability==0, feat]\n",
    "    stat, p = ttest_ind(grp1, grp0, nan_policy='omit')\n",
    "    results.append((feat, stat, p))\n",
    "res_df = pd.DataFrame(results, columns=['Feature','t-statistic','p-value']).set_index('Feature')\n",
    "st.dataframe(res_df.style.format({\"t-statistic\":\"{:.2f}\", \"p-value\":\"{:.3f}\"}))\n",
    "\n",
    "st.markdown(\n",
    "    \"\"\"\n",
    "    > **Interpretation:**  \n",
    "    > - Larger |t-statistic| & smaller p-value (e.g. <0.05) indicate a significant difference  \n",
    "    >   in that feature between potable and non-potable samples.\n",
    "    \"\"\"\n",
    ")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
